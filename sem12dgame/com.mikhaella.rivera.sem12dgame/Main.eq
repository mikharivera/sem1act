/*
 * Main.eq
 * Generated by Eqela Studio 2.0b7.4
 */

public class Main : SEScene
{

	SESprite bg;
	SESprite fg;
	SESprite text;
	SESprite tardis;
	bool right = true;
	bool left = false;
	bool down = true;
	bool up = false;
	int speed  = 50;
	int bounce = 0;
	double rotation = 0;
	String display;
			
	public void initialize(SEResourceCache rsc)
	{
		
		base.initialize(rsc);
		
		rsc.prepare_image("dwtimevortex","timevortex",get_scene_width(), get_scene_height());
		bg = add_sprite_for_image(SEImage.for_resource("dwtimevortex"));
		bg.move(0,0);

		rsc.prepare_image("dwtardis","tardis",get_scene_width()*0.1);	
		fg = add_sprite_for_image(SEImage.for_resource("dwtardis"));
		fg.move(100,100);

		rsc.prepare_font("myFont", "Times New Roman italic color=#ffffff", 40);

		display = "Bounces = %d".printf().add(Primitive.for_integer(bounce)).to_string();

		text = add_sprite_for_text(display, "myFont");
		text.move(0,get_scene_height() - text.get_height());
		
	}

	public void update(TimeVal now, double delta)
	{
		base.update(now, delta);
		speed += 100;
		rotation += MathConstant.M_PI_4/10;
		fg.set_rotation(rotation);

		if(right)
		{
			fg.move(fg.get_x() + delta*speed, fg.get_y());

			if(fg.get_x() + fg.get_width() > get_scene_width())
			{	
				bounce++;
				display = "Bounces = %d".printf().add(Primitive.for_integer(bounce)).to_string();
				speed = 50;
				right = false;
				left = true;
				text.set_text(display);
			}
		}

		if(left)
		{
			fg.move(fg.get_x() - delta*speed, fg.get_y());

			if(fg.get_x() < 0)
			{
				bounce++;
				display = "Bounces = %d".printf().add(Primitive.for_integer(bounce)).to_string();
				speed = 50;
				right = true;
				left = false;
				text.set_text(display);
			}
		}

		if(down)
		{
			fg.move(fg.get_x(), fg.get_y()  + delta* speed);

			if(fg.get_y() + fg.get_height() > get_scene_height())
			{
				bounce++;
				display = "Bounces = %d".printf().add(Primitive.for_integer(bounce)).to_string();
				speed = 50;
				down = false;
				up = true;
				text.set_text(display);
			}
		}

		if(up)
		{
			fg.move(fg.get_x(), fg.get_y() - delta*speed);

			if(fg.get_y() < 0)
			{
				bounce++;
				display = "Bounces = %d".printf().add(Primitive.for_integer(bounce)).to_string();
				speed = 50;
				down = true;
				up = false;
				text.set_text(display);
			}
		}
	}

	public void set_rotation(double angle)
	{
		rotation = angle;
	}

	public double get_rotation()
	{
		return(rotation);
	}

	/*public void cleanup()
	{
		base.cleanup();
		SESprite.remove(fg);
		SESprite.remove(bg);
		SESprite.remove(text);
	}*/
}
